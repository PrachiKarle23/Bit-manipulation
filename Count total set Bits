class Solution{
    public:
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int solve(int n){
        vector<int>a;
        while(n!=0){
            int rem=n%2;
            a.push_back(rem);
            n/=2;
        }
        int cnt=0;
        for(int i=0;i<a.size();i++){
            if(a[i]==1){
                cnt++;
            }
        }
        return cnt;
    }
    int countSetBits(int n)
    {
        int count=0;
        for(int i=0;i<n;i++){
            count+=solve(i+1);
        }
        return count;
    }
};


//2nd 
class Solution{
    public:
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int countSetBits(int n)
    {
       if(n<=1) 
         return n;
       int x=log2(n);
       
       return (pow(2,x-1)*x) +
       (n-pow(2,x)+1) +
       countSetBits(n-pow(2,x));
    }
};
